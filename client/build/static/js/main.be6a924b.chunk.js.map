{"version":3,"sources":["store/types.js","constants.js","api/api.js","store/Auth/actions.js","store/Auth/reducers.js","store/reducers.js","store/actions.js","store/index.js","components/header.js","pages/SignIn.js","pages/SignUp.js","script.js","pages/Chat.jsx","pages/GeneralChat.js","pages/Users.js","pages/PrivateChat.js","pages/ChatWrapper.js","App.js","index.js","assets/images/ava.png"],"names":["API_URL","window","location","protocol","URL","host","params","callback","axios","post","then","data","decodeToken","localStorage","getItem","state","token","replace","split","payload","JSON","parse","Base64","decode","userId","firstName","lastName","email","defaults","headers","common","logged","setItem","login","password","dispatch","api","loginRequest","type","types","json","checkLogged","logout","initialState","undefined","combineReducers","auth","action","removeItem","mapStateToProps","mapDispatchToProps","actions","store","component","connect","props","history","useHistory","className","href","onClick","e","preventDefault","push","to","useEffect","useState","setState","handleChange","target","name","value","onSubmit","htmlFor","id","autoComplete","placeholder","onChange","useForm","register","handleSubmit","watch","errors","console","log","ref","required","addSize","document","querySelector","header","chat_send_area","page_wrapper","messages","chat_header","main","headerHeight","clientHeight","chat_send_areaHeight","chat_headerHeight","style","paddingTop","height","addEventListener","scrollMessage","scrollTop","scrollHeight","Chat","outputMessage","this","map","el","i","isMyself","key","src","avaImg","alt","message","messageInput","onKeyPress","keyPressed","sendMessage","Component","_isMounted","event","newState","socketIdPrev","mixins","socket","on","emit","prevLogged","users","userSocketId","outputUsers","_id","PrivateChat","match","withRouter","io","socketId","path","useParams","ChatWrapper","SignUp","SignIn","createStore","reducers","applyMiddleware","thunk","ReactDOM","render","getElementById","module","exports"],"mappings":"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","file":"static/js/main.be6a924b.chunk.js","sourcesContent":["export const LOGIN = 'LOGIN';\r\nexport const CHECK_LOGGED = \"CHECK_LOGGED\";\r\nexport const LOGOUT = 'LOGOUT';\r\n\r\n\r\nexport default {\r\n    LOGIN,\r\n    CHECK_LOGGED,\r\n    LOGOUT,\r\n}\r\n","export const API_URL = process.env.NODE_ENV === 'production' ? `${window.location.protocol}/api/v1/` : 'http://localhost:5000/api/v1/';\r\nexport const URL = process.env.NODE_ENV === 'production' ? `${window.location.host}` : 'http://localhost:5000';\r\n","import axios from 'axios';\r\nimport {API_URL} from '../constants'\r\n\r\nexport default {\r\n    register (params, callback) {\r\n        axios.post(API_URL + 'register-user', params).then((data) => {\r\n            callback(data);\r\n        })\r\n    },\r\n\r\n    login (params, callback) {\r\n        axios.post(API_URL + 'login', params).then((data) => {\r\n            callback(data);\r\n        })\r\n    }\r\n}\r\n","import types from '../types'\r\nimport api from \"../../api/api\";\r\nimport {Base64} from \"js-base64\";\r\nimport axios from \"axios/index\";\r\n\r\n\r\nconst decodeToken = (data = window.localStorage.getItem('token')) => {\r\n    let state = {};\r\n    if (data) {\r\n        let token = data;\r\n\r\n        state.token = token;\r\n        token = token.replace(\"Bearer \", \"\");\r\n        token = token.split('.');\r\n\r\n        let header = token[0];\r\n        let payload = token[1];\r\n        let signature = token[2];\r\n        payload = JSON.parse(Base64.decode(payload));\r\n\r\n        state.userId = payload.userId;\r\n        state.firstName = payload.firstName;\r\n        state.lastName = payload.lastName;\r\n        state.email = payload.email;\r\n\r\n        axios.defaults.headers.common['Authorization'] = data;\r\n        state.logged = true;\r\n        localStorage.setItem('token', data);\r\n    }\r\n    return state;\r\n\r\n};\r\n\r\nexport default  {\r\n    login(email, password) {\r\n        return dispatch => {\r\n            const params = {\r\n                email: email,\r\n                password: password,\r\n            };\r\n            api.login(params, (data) => {\r\n                const state = decodeToken(data.data);\r\n                dispatch(this.loginRequest({\r\n                    type: types.LOGIN,\r\n                    ...state,\r\n                }));\r\n            });\r\n        }\r\n\r\n    },\r\n\r\n    loginRequest(json) {\r\n        return json;\r\n    },\r\n\r\n    checkLogged() {\r\n        const state = decodeToken();\r\n        return {\r\n            type: types.CHECK_LOGGED,\r\n            ...state\r\n        }\r\n    },\r\n\r\n    logout() {\r\n        return {\r\n            type: types.LOGOUT,\r\n        }\r\n    }\r\n}\r\n","import types from '../types';\r\nimport api from '../../api/api';\r\nimport { Base64 } from 'js-base64';\r\nimport axios from 'axios';\r\n\r\nconst initialState = {\r\n    logged: false,\r\n    token: undefined,\r\n    userId: '',\r\n    firstName: '',\r\n    lastName: '',\r\n    email: '',\r\n};\r\n\r\nexport function authReducers(state, action) {\r\n    if (typeof state === 'undefined') {\r\n        return initialState;\r\n    }\r\n\r\n    switch (action.type) {\r\n        case types.LOGIN: {\r\n            state = {\r\n                ...action\r\n            };\r\n\r\n            break;\r\n        }\r\n\r\n        case types.CHECK_LOGGED: {\r\n            if(!action.token) {\r\n                state.token = undefined;\r\n                state.logged = false;\r\n            }\r\n            else {\r\n                state = {\r\n                    ...action\r\n                };\r\n            }\r\n\r\n\r\n            break;\r\n        }\r\n\r\n        case types.LOGOUT: {\r\n            window.localStorage.removeItem('token');\r\n            axios.defaults.headers.common['Authorization'] = '';\r\n\r\n            state.token = undefined;\r\n            state.logged = false;\r\n\r\n            break;\r\n        }\r\n    }\r\n\r\n        return state;\r\n}\r\n","import { combineReducers } from 'redux';\r\nimport { authReducers } from \"./Auth/reducers\";\r\n\r\nexport default combineReducers({\r\n    auth: authReducers,\r\n});\r\n","import auth  from './Auth/actions';\r\n\r\nexport default {\r\n    ...auth,\r\n}\r\n","import actions from \"./actions\";\r\nimport { connect } from 'react-redux';\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        ...state\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n    ...actions,\r\n};\r\n\r\nexport const store = (component) => {\r\n    return connect(mapStateToProps, mapDispatchToProps)(component);\r\n};\r\n","import React, {useState, useEffect, useMemo} from \"react\";\r\nimport { store } from \"../store\";\r\nimport { Link, useHistory } from 'react-router-dom';\r\n\r\nfunction Header(props) {\r\n    const history = useHistory();\r\n    let logged = props.auth.logged;\r\n\r\n    let logout = () => {\r\n        props.logout();\r\n        history.push(\"/\");\r\n    };\r\n\r\n    const infoJsx = () => {\r\n        if(logged) {\r\n            return (\r\n                <div className=\"actions\">\r\n                    <a href=\"#\" onClick={(e) => {e.preventDefault(); logout()}}>\r\n\r\n                        Logout\r\n                    </a>\r\n                </div>\r\n            );\r\n        }\r\n\r\n        else {\r\n            return(\r\n                <div className=\"actions\">\r\n                    <Link to=\"/registration\">Sign Up</Link>\r\n                </div>\r\n\r\n            );\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"header\">\r\n            <div className=\"logo\">\r\n                Chatick\r\n            </div>\r\n\r\n            {infoJsx()}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default store(Header);\r\n","import React, { useState, useEffect } from 'react';\r\n\r\nimport { store } from '../store/index';\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\n\r\nfunction SingIn(props) {\r\n    let history = useHistory();\r\n    useEffect(() =>{\r\n        if (props.auth.logged) {\r\n            history.push(\"/chat\");\r\n        }\r\n    },[props.auth.logged]);\r\n\r\n    const [state, setState] = useState({email: '', password: ''});\r\n\r\n    const handleChange = (e) => {\r\n        setState({\r\n            ...state,\r\n            [e.target.name]: e.target.value,\r\n        });\r\n    };\r\n    const submitForm =  (e) => {\r\n        e.preventDefault();\r\n        props.login(state.email, state.password);\r\n    };\r\n\r\n\r\n    return (\r\n        <div className=\"page-wrapper sign-in form\">\r\n            <div className=\"form\">\r\n                <div className=\"form__title\">\r\n                    LOGIN\r\n                </div>\r\n                <form onSubmit={submitForm}>\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"email\">Email address</label>\r\n                        <input type=\"email\"\r\n                               className=\"form-control\"\r\n                               name=\"email\"\r\n                               id=\"email\"\r\n                               autoComplete=\"username\"\r\n                               placeholder=\"Enter email\"\r\n                               value={state.email}\r\n                               onChange={handleChange}\r\n                        />\r\n                        <small id=\"emailHelp\" className=\"form-text text-muted\">We'll never share your email with\r\n                            anyone else.\r\n                        </small>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"password\">Password</label>\r\n                        <input type=\"password\"\r\n                               className=\"form-control\"\r\n                               name=\"password\"\r\n                               id=\"password\"\r\n                               autoComplete=\"current-password\"\r\n                               placeholder=\"Password\"\r\n                               value={state.password}\r\n                               onChange={handleChange}\r\n                        />\r\n                    </div>\r\n                    <div className=\"form__buttons\">\r\n                        <button type=\"submit\" className=\"btn btn-primary w-100\">Login</button>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\nexport default store(SingIn);\r\n","import React, { useState } from 'react'\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useForm } from 'react-hook-form';\r\nimport api from '../api/api';\r\nimport { store } from '../store/index';\r\n\r\nfunction SingUp(props) {\r\n    const history = useHistory();\r\n    const { register, handleSubmit, watch, errors } = useForm();\r\n    const [state, setState] = useState({\r\n        firstName: '',\r\n        lastName: '',\r\n        email: '',\r\n        password: '',\r\n    });\r\n\r\n    const submitForm = () => {\r\n        api.register(state, (data) => {\r\n            console.log(data)\r\n        })\r\n    };\r\n\r\n    const handleChange = (e) => {\r\n        setState({\r\n            ...state,\r\n            [e.target.name]: e.target.value\r\n        });\r\n\r\n    };\r\n\r\n    return (\r\n\r\n        <div className=\"page-wrapper sign-up\">\r\n            <div className=\"form\">\r\n                <div className=\"form__title\">\r\n                    Registration\r\n                </div>\r\n\r\n                <form onSubmit={handleSubmit(submitForm)}>\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"firstName\">First Name</label>\r\n\r\n                        <input type=\"text\"\r\n                               className=\"form-control\"\r\n                               id=\"firstName\"\r\n                               name=\"firstName\"\r\n                               placeholder=\"First Name\"\r\n                               ref={register({ required: true })}\r\n                               onChange={handleChange}\r\n                               value={state.firstName}\r\n                        />\r\n                    </div>\r\n\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"lastName\">Last Name</label>\r\n                        <input type=\"text\"\r\n                               className=\"form-control\"\r\n                               id=\"lastName\"\r\n                               name=\"lastName\"\r\n                               placeholder=\"Last Name\"\r\n                               onChange={handleChange}\r\n                               value={state.lastName}\r\n                        />\r\n                    </div>\r\n\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"email\">Email address</label>\r\n\r\n                        <input type=\"email\"\r\n                               className=\"form-control\"\r\n                               id=\"email\"\r\n                               name=\"email\"\r\n                               autoComplete=\"username\"\r\n                               placeholder=\"Enter email\"\r\n                               onChange={handleChange}\r\n                               value={state.email}\r\n                        />\r\n\r\n                    </div>\r\n\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"password\">Password</label>\r\n                        <input type=\"password\"\r\n                               className=\"form-control\"\r\n                               id=\"password\"\r\n                               name=\"password\"\r\n                               placeholder=\"Password\"\r\n                               autoComplete=\"current-password\"\r\n                               onChange={handleChange}\r\n                               value={state.password}\r\n                        />\r\n                    </div>\r\n                    <div className=\"form__buttons\">\r\n                        <button\r\n                            type=\"submit\"\r\n                            className=\"btn btn-primary\"\r\n                        >\r\n                            Registration\r\n                        </button>\r\n                        <button\r\n                            onClick={() => {history.push(\"/\");}}\r\n                            className=\"btn btn-dark\"\r\n                        >\r\n                            Cancel\r\n                        </button>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default store(SingUp);\r\n\r\n","// document.addEventListener('DOMContentLoaded', function () {\r\n//\r\n// });\r\nfunction addSize() {\r\n    let app = document.querySelector('#app');\r\n    let header = document.querySelector('.header');\r\n    let chat_send_area = document.querySelector('.chat__send-area');\r\n    let page_wrapper = document.querySelector('.page-wrapper');\r\n    let messages = document.querySelector('.chat .messages');\r\n    let chat_header = document.querySelector('.chat .chat__header');\r\n\r\n\r\n    function main() {\r\n        if (header && chat_send_area && page_wrapper && messages && chat_header) {\r\n            let headerHeight = header.clientHeight;\r\n            let chat_send_areaHeight = chat_send_area.clientHeight;\r\n            let chat_headerHeight = chat_header.clientHeight;\r\n\r\n            page_wrapper.style.paddingTop = `${headerHeight}px`;\r\n            messages.style.height = `calc(100% - ${chat_send_areaHeight + chat_headerHeight}px)`;\r\n        }\r\n    }\r\n\r\n    main();\r\n\r\n    window.addEventListener('resize', () => {\r\n        main();\r\n    });\r\n}\r\n\r\nfunction scrollMessage() {\r\n    let messages = document.querySelector('.chat .messages');\r\n    if (messages) {\r\n        messages.scrollTop = messages.scrollHeight;\r\n    }\r\n}\r\n\r\n\r\nexport default {\r\n    addSize,\r\n    scrollMessage,\r\n}\r\n\r\n","import React, { Component } from 'react'\r\nimport { store } from '../store/index'\r\nimport mixins from '../script'\r\nimport avaImg from '../assets/images/ava.png';\r\n\r\nclass Chat extends Component {\r\n    render() {\r\n        let outputMessage = this.props.messages.map((el, i) => {\r\n            let isMyself = false;\r\n            el.userId === this.props.auth.userId ? isMyself = true : isMyself = false;\r\n\r\n            return (\r\n                <div key={i} className={isMyself ? 'messages__item messages__item--my-message' : \"messages__item\"}>\r\n                    <div className=\"messages__photo\">\r\n                        <img src={avaImg} alt=\"\"/>\r\n                        <div className=\"user-status user-status--online\"/>\r\n                    </div>\r\n                    <div className=\"messages__block\">\r\n                        <div className=\"messages__author\">\r\n                            {!isMyself ? el.firstName + ' ' + el.lastName + '': el.firstName + ' ' + el.lastName + ''}\r\n                            <span className=\"messages__time\">8min</span>\r\n                        </div>\r\n                        <div className={'messages__text'} >\r\n                            {el.message}\r\n                            <div className=\"messages__read-message\">\r\n                                <i className=\"icofont-check-alt\"/>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            );\r\n        });\r\n\r\n        return (\r\n            <div className=\"chat\">\r\n                <div className=\"chat__header\">\r\n                    <div className=\"chat__head-text\">\r\n                        @General chat\r\n                    </div>\r\n                    <div className=\"chat__close\">\r\n                        <i className=\"icofont-close-line\"/>\r\n                    </div>\r\n                </div>\r\n                <div className=\"messages\">\r\n                    {outputMessage}\r\n                </div>\r\n                <div className=\"chat__send-area\">\r\n                    <div className=\"chat__typing\">\r\n                        <span>Petya and Valera are typing</span>\r\n                    </div>\r\n                    <div className=\"chat__textarea-wrap\">\r\n                        <div className=\"chat__expressionless\">\r\n                            <i className=\"icofont-expressionless\" />\r\n                        </div>\r\n\r\n                        <input type=\"text\"\r\n                               className=\"chat__input-message\"\r\n                               placeholder=\"Enter your message\"\r\n                               onChange={this.props.handleChange}\r\n                               value={this.props.state.messageInput}\r\n                               onKeyPress={this.props.keyPressed}\r\n                        />\r\n                    </div>\r\n\r\n                    <div className=\"chat__send-message\" onClick={()=>{this.props.sendMessage()}}>\r\n                        <i className=\"icofont-paper-plane\" />\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Chat;\r\n\r\n","import React, { Component } from 'react'\r\nimport { store } from '../store/index'\r\nimport mixins from '../script'\r\nimport Chat from './Chat'\r\nimport avaImg from '../assets/images/ava.png';\r\n\r\nclass GeneralChat extends Component {\r\n    _isMounted = false;\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            socketIdPrev: '',\r\n            messageInput: '',\r\n            messages: [],\r\n        };\r\n        // this.props.socket.on('connect', () => {\r\n        //\r\n        // });\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        mixins.addSize();\r\n        if(this.props.auth.logged) {\r\n            this._isMounted = true;\r\n\r\n            this.props.socket.on('message', (data) => {\r\n                let newState = this.state;\r\n                newState.messages = [...newState.messages, {\r\n                    message: data.messageInput,\r\n                    userId: data.userId,\r\n                    firstName: data.firstName,\r\n                    lastName: data.lastName,\r\n                }];\r\n\r\n                if (this._isMounted) {\r\n                    this.setState({\r\n                            ...newState,\r\n                        }\r\n                    );\r\n                }\r\n\r\n                mixins.scrollMessage();\r\n            });\r\n\r\n            if (this.props.socket.id !== this.state.socketIdPrev) {\r\n                this.props.socket.emit('getGeneralMessage');\r\n            }\r\n\r\n            this.props.socket.on('getGeneralMessage', (data) => {\r\n                if (this.props.socket.id !== this.state.socketIdPrev) {\r\n                    let newState = this.state;\r\n                    newState.socketIdPrev = this.props.socket.id;\r\n                    newState.messages = data;\r\n\r\n                    if (this._isMounted) {\r\n                        this.setState({\r\n                                ...newState,\r\n                            }\r\n                        );\r\n                    }\r\n                    mixins.scrollMessage();\r\n                }\r\n            });\r\n\r\n        }\r\n    }\r\n\r\n    componentWillUnmount(prevLogged) {\r\n        this._isMounted = false;\r\n    }\r\n\r\n    keyPressed = event => {\r\n        if (event.key === \"Enter\") {\r\n            this.sendMessage();\r\n        }\r\n    };\r\n\r\n    sendMessage() {\r\n        if (this.state.messageInput !== \"\") {\r\n            this.props.socket.emit('message', {\r\n                messageInput: this.state.messageInput,\r\n                userId: this.props.auth.userId,\r\n                firstName: this.props.auth.firstName,\r\n                lastName: this.props.auth.lastName,\r\n            });\r\n\r\n            let newState = this.state;\r\n            newState.messageInput = \"\";\r\n            this.setState({\r\n                    ...newState,\r\n                }\r\n            )\r\n        }\r\n    }\r\n\r\n    handleChange = e => {\r\n        let newState = this.state;\r\n        newState.messageInput = e.target.value.replace(/\\n/g, '');\r\n        this.setState({\r\n                ...newState,\r\n            }\r\n        );\r\n    };\r\n\r\n\r\n    render() {\r\n        return (\r\n            <Chat\r\n                messages={this.state.messages}\r\n                state={this.state}\r\n                auth={this.props.auth}\r\n                handleChange={this.handleChange}\r\n                keyPressed={this.keyPressed}\r\n                sendMessage={this.sendMessage}\r\n            />\r\n        );\r\n\r\n    }\r\n\r\n    // render() {\r\n    //     return (\r\n    //         <div>ad</div>\r\n    //     );\r\n    // }\r\n}\r\n\r\nexport default store(GeneralChat);\r\n\r\n","import React, {Component} from 'react'\r\nimport {store} from '../store/index';\r\nimport avaImg from '../assets/images/ava.png';\r\nimport {Link} from \"react-router-dom\"\r\nimport {URL} from \"../constants\";\r\n\r\nclass Users extends Component {\r\n    _isMounted = false;\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            users: [],\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this._isMounted = true;\r\n        if (this.props.auth.logged) {\r\n            console.log(this.props.socket.id);\r\n            this.props.socket.emit('userConnect', {\r\n                userId: this.props.auth.userId,\r\n                userSocketId: this.props.socket.id,\r\n            });\r\n        }\r\n\r\n\r\n        this.props.socket.on('userConnect', (data) => {\r\n            let newState = this.state;\r\n            newState.users = data;\r\n            if (this._isMounted) {\r\n                this.setState({\r\n                        ...newState,\r\n                    }\r\n                );\r\n            }\r\n        });\r\n\r\n        this.props.socket.on('userConnect', (data) => {\r\n            let newState = this.state;\r\n            newState.users = data;\r\n            if (this._isMounted) {\r\n                this.setState({\r\n                        ...newState,\r\n                    }\r\n                );\r\n            }\r\n        });\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this._isMounted = false;\r\n    }\r\n\r\n    sendMessage() {\r\n        this.props.socket.emit('message', {messageInput: this.state.messageInput, userId: this.props.auth.userId});\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        let newState = this.state;\r\n        newState.messageInput = e.target.value;\r\n        this.setState({\r\n                ...newState,\r\n            }\r\n        );\r\n    };\r\n\r\n\r\n    render() {\r\n\r\n        let outputUsers = this.state.users.map((el, i) => {\r\n            // console.log(el);\r\n            return (\r\n                <Link key={i} to={`/chat/${el._id}/${el.userSocketId}`}>\r\n                    <div className=\"users__item\">\r\n                        <div className=\"users__photo\">\r\n                            <img src={avaImg} alt=\"\"/>\r\n                            <div className=\"user-status user-status--online\"/>\r\n                        </div>\r\n                        <div className=\"users__info\">\r\n                            <div className=\"users__name\">\r\n                                {el.firstName} {el.lastName}\r\n                                <span className=\"users__time\">8min</span>\r\n                            </div>\r\n                            <div className=\"users__last-message\">\r\n                                Hey last, can\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </Link>\r\n\r\n            );\r\n        });\r\n\r\n        return (\r\n            <div className=\"users\">\r\n                <div className=\"users__profile\">\r\n                    <div className=\"users__item\">\r\n                        <div className=\"users__photo\">\r\n                            <img src={avaImg} alt=\"\"/>\r\n                            <div className=\"user-status user-status--online\"/>\r\n                        </div>\r\n                        <div className=\"users__info\">\r\n                            <div className=\"users__name\">\r\n                                {/*{el.firstName} {el.lastName}*/}Petya Maiko\r\n                            </div>\r\n                            <div className=\"users__status-text\">\r\n                                Status\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"users__notification\">\r\n                            <i className=\"icofont-notification\"/>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"users__search\">\r\n                    <input\r\n                        type=\"text\"\r\n                        className=\"users__search-input\"\r\n                        placeholder=\"Search\"\r\n                    />\r\n                </div>\r\n                {outputUsers}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default store(Users);\r\n\r\n","import React, { Component } from 'react'\r\nimport { store } from '../store/index'\r\nimport mixins from '../script'\r\nimport Chat from './Chat'\r\nimport avaImg from '../assets/images/ava.png';\r\nimport { withRouter } from \"react-router\";\r\n\r\nclass PrivateChat extends Component {\r\n    _isMounted = false;\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            socketIdPrev: '',\r\n            messageInput: '',\r\n            messages: [],\r\n        };\r\n\r\n        // let {userId} = props.useParams();\r\n        console.log(props.match.params.userId);\r\n    }\r\n\r\n    componentDidMount() {\r\n        mixins.addSize();\r\n        if(this.props.auth.logged) {\r\n            this._isMounted = true;\r\n\r\n            this.props.socket.on('message', (data) => {\r\n                let newState = this.state;\r\n                newState.messages = [...newState.messages, {\r\n                    message: data.messageInput,\r\n                    userId: data.userId,\r\n                    firstName: data.firstName,\r\n                    lastName: data.lastName,\r\n                }];\r\n\r\n                if (this._isMounted) {\r\n                    this.setState({\r\n                            ...newState,\r\n                        }\r\n                    );\r\n                }\r\n\r\n                mixins.scrollMessage();\r\n            });\r\n\r\n            if (this.props.socket.id !== this.state.socketIdPrev) {\r\n                this.props.socket.emit('getGeneralMessage');\r\n            }\r\n\r\n            this.props.socket.on('getGeneralMessage', (data) => {\r\n                if (this.props.socket.id !== this.state.socketIdPrev) {\r\n                    let newState = this.state;\r\n                    newState.socketIdPrev = this.props.socket.id;\r\n                    newState.messages = data;\r\n\r\n                    if (this._isMounted) {\r\n                        this.setState({\r\n                                ...newState,\r\n                            }\r\n                        );\r\n                    }\r\n                    mixins.scrollMessage();\r\n                }\r\n            });\r\n\r\n        }\r\n    }\r\n\r\n    componentWillUnmount(prevLogged) {\r\n        this._isMounted = false;\r\n    }\r\n\r\n    keyPressed = event => {\r\n        if (event.key === \"Enter\") {\r\n            this.sendMessage();\r\n        }\r\n    };\r\n\r\n    sendMessage() {\r\n        if (this.state.messageInput !== \"\") {\r\n            this.props.socket.emit('message', {\r\n                messageInput: this.state.messageInput,\r\n                userId: this.props.auth.userId,\r\n                firstName: this.props.auth.firstName,\r\n                lastName: this.props.auth.lastName,\r\n            });\r\n\r\n            let newState = this.state;\r\n            newState.messageInput = \"\";\r\n            this.setState({\r\n                    ...newState,\r\n                }\r\n            )\r\n        }\r\n    }\r\n\r\n    handleChange = e => {\r\n        let newState = this.state;\r\n        newState.messageInput = e.target.value.replace(/\\n/g, '');\r\n        this.setState({\r\n                ...newState,\r\n            }\r\n        );\r\n    };\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                asd1\r\n                {/*<Chat*/}\r\n                {/*messages={this.state.messages}*/}\r\n                {/*state={this.state}*/}\r\n                {/*auth={this.props.auth}*/}\r\n                {/*handleChange={this.handleChange}*/}\r\n                {/*keyPressed={this.keyPressed}*/}\r\n                {/*sendMessage={this.sendMessage}*/}\r\n                {/*/>*/}\r\n            </div>\r\n\r\n        );\r\n\r\n    }\r\n\r\n    // render() {\r\n    //     return (\r\n    //         <div>ad</div>\r\n    //     );\r\n    // }\r\n}\r\n\r\nexport default store(withRouter(PrivateChat));\r\n\r\n","import React, { useState, useEffect } from 'react'\r\nimport { store } from '../store/index'\r\nimport GeneralChat from './GeneralChat'\r\nimport Users from './Users'\r\nimport io from 'socket.io-client'\r\nimport { URL } from '../constants'\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {BrowserRouter, Switch, Route, useParams} from \"react-router-dom\"\r\nimport PrivateChat from './PrivateChat'\r\nlet socket = io(URL);\r\n\r\nfunction ChatWrapper(props) {\r\n    let history = useHistory();\r\n    const [state, setState] = useState({socketId: undefined});\r\n    useEffect(() => {\r\n        // socket.on('connect', () => {\r\n        //     let newState = state;\r\n        //     newState.socketId = socket.id;\r\n        //\r\n        //     setState({\r\n        //         ...newState,\r\n        //     });\r\n        // });\r\n\r\n        if (!props.auth.logged) {\r\n            history.push(\"/\");\r\n        }\r\n        else {\r\n\r\n        }\r\n\r\n    }, []);\r\n    //\r\n    // if (state.socketId !== undefined) {\r\n    //\r\n    // }\r\n    // else {\r\n    //     return (<div>loading</div>)\r\n    // }\r\n\r\n    return (\r\n        <div className=\"page-wrapper chat-wrapper\">\r\n            <div className=\"container-fluid h-100\">\r\n                <div className=\"row h-100\">\r\n                    <div className=\"col-md-3 h-100 px-0\">\r\n                        <Users socket={socket} />\r\n                    </div>\r\n                    <div className=\"col-md-6 h-100 px-0\">\r\n                        <Switch>\r\n                            <Route path={`/chat/:userId`}>\r\n                                <PrivateChat socket={socket} useParams={useParams}/>\r\n                            </Route>\r\n                            <Route path={`/chat`}>\r\n                                <GeneralChat socket={socket}/>\r\n                            </Route>\r\n                        </Switch>\r\n                    </div>\r\n\r\n                    <div className=\"col-md-3 h-100 px-0\">\r\n                        <div className=\"details\"/>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default store(ChatWrapper);\r\n\r\n","import React,{useEffect} from 'react';\r\nimport {store} from \"./store\";\r\nimport Header from \"./components/header\";\r\n\r\n// import {Router, Route, Switch, Redirect} from \"react-router\";\r\n// import { createBrowserHistory } from \"history\";\r\n\r\nimport {BrowserRouter, Switch, Route} from \"react-router-dom\"\r\n\r\n// import openSocket from 'socket.io-client';\r\nimport SignIn from \"./pages/SignIn\";\r\nimport SignUp from \"./pages/SignUp\";\r\nimport ChatWrapper from \"./pages/ChatWrapper\";\r\n\r\n// const history = createBrowserHistory();\r\n// let path = history.location.pathname;\r\n\r\nfunction App(props) {\r\n    useEffect(() => {\r\n        props.checkLogged();\r\n        // const socket = openSocket('http://localhost:5000');\r\n    },[]);\r\n\r\n\r\n    return (\r\n        <BrowserRouter>\r\n            <Header />\r\n            <Switch>\r\n                <Route path=\"/chat\" component={ChatWrapper}/>\r\n                <Route path=\"/registration\" component={SignUp}/>\r\n                <Route path=\"/\" component={SignIn}/>\r\n            </Switch>\r\n\r\n        </BrowserRouter>\r\n    )\r\n}\r\n\r\nexport default store(App);\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { createStore, applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport actions from './store/Auth/actions'\r\n\r\nimport reducers from './store/reducers';\r\nimport App from './App';\r\n\r\n// styles\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport './assets/sass/app.scss'\r\nimport './assets/libs/icofont.min.css'\r\n\r\nconst store = createStore(reducers, applyMiddleware(thunk));\r\n// store.getState();\r\n// store.subscribe(() => store.getState());\r\n//store.dispatch(actions.loginRequest()).then(() => console.log(store.getState()))\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <App />\r\n    </Provider>,\r\n    document.getElementById('app')\r\n);\r\n","module.exports = __webpack_public_path__ + \"static/media/ava.e4c49134.png\";"],"sourceRoot":""}